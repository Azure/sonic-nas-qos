# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - "*"

pool:
  vmImage: 'ubuntu-20.04'

container:
  image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster:latest

steps:
- script: |
    sudo apt-get install -qq -y \
      qtbase5-dev \
      libdbus-glib-1-2 \
      libdbus-glib-1-dev \
      libpcsclite-dev \
      docbook-to-man \
      docbook-utils \
      aspell-en \
      libhiredis-dev \
      libnl-3-dev \
      libnl-genl-3-dev \
      libnl-route-3-dev \
      libnl-nf-3-dev \
      swig3.0 \
      libpython2.7-dev
  displayName: "Install dependencies"
- task: DownloadPipelineArtifact@2
  inputs:
    source: specific
    project: build
    pipeline: 9
    artifacts: sonic-swss-common
  displayName: "Download sonic swss common deb packages"
- script: |
    sudo dpkg -i sonic-swss-common/libswsscommon_1.0.0_amd64.deb
    sudo dpkg -i sonic-swss-common/libswsscommon-dev_1.0.0_amd64.deb
  workingDirectory: $(Pipeline.Workspace)
  displayName: "Install sonic swss Common"
- checkout: self
- script: |
    ls -l
    dpkg-buildpackage -us -uc -b && cp ../*.deb .
  displayName: "Compile sonic wpa supplicant"
- publish: $(System.DefaultWorkingDirectory)/
  artifact: sonic-wpa-supplicant
  displayName: "Archive sonic wpa supplicant debian packages"
